/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ac.myfinances.rest.api;

import java.util.List;
import ac.myfinances.rest.model.Transaction;
import ac.myfinances.rest.model.TransactionDTO;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-10T22:47:30.445-05:00[America/New_York]")

@Validated
@Api(value = "transactions", description = "the transactions API")
public interface TransactionsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /transactions : Gets all the transactions
     *
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "Gets all the transactions", nickname = "getAllTransactions", notes = "", response = Transaction.class, responseContainer = "List", tags={ "Transactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/transactions",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Transaction>> getAllTransactions() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2000-01-23\", \"amount\" : 0.8008282, \"creditAccount\" : { \"balance\" : 0.8008282, \"name\" : \"name\", \"parentCategory\" : \"parentCategory\", \"id\" : \"id\", \"type\" : \"type\" }, \"debitAccount\" : { \"balance\" : 0.8008282, \"name\" : \"name\", \"parentCategory\" : \"parentCategory\", \"id\" : \"id\", \"type\" : \"type\" }, \"description\" : \"description\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /transactions : Create or Update one or more transaction
     *
     * @param transactionDTO Transactions to create or update (required)
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "Create or Update one or more transaction", nickname = "updateTransactions", notes = "", response = Transaction.class, responseContainer = "List", tags={ "Transactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/transactions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<List<Transaction>> updateTransactions(@ApiParam(value = "Transactions to create or update", required = true) @Valid @RequestBody List<TransactionDTO> transactionDTO) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2000-01-23\", \"amount\" : 0.8008282, \"creditAccount\" : { \"balance\" : 0.8008282, \"name\" : \"name\", \"parentCategory\" : \"parentCategory\", \"id\" : \"id\", \"type\" : \"type\" }, \"debitAccount\" : { \"balance\" : 0.8008282, \"name\" : \"name\", \"parentCategory\" : \"parentCategory\", \"id\" : \"id\", \"type\" : \"type\" }, \"description\" : \"description\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
