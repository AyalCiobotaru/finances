/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ac.myfinances.rest.api;

import ac.myfinances.rest.model.ParentCategory;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import jakarta.validation.Valid;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-10T22:47:30.445-05:00[America/New_York]")

@Validated
@Api(value = "parentCategory", description = "the parentCategory API")
public interface ParentCategoryApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /parentCategory : Create a parent category
     *
     * @param body Create Account body (required)
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "Create a parent category", nickname = "createParentCategory", notes = "", tags={ "ParentCategory", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/parentCategory",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> createParentCategory(@ApiParam(value = "Create Account body", required = true) @Valid @RequestBody String body) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /parentCategory : Get all parent categories
     *
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "Get all parent categories", nickname = "getAllParentCategories", notes = "", response = ParentCategory.class, responseContainer = "List", tags={ "ParentCategory", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ParentCategory.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/parentCategory",
        produces = { "application/json" }
    )
    default ResponseEntity<List<ParentCategory>> getAllParentCategories() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
